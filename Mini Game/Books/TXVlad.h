
//структура

struct Hero
    {
    int x , y;
    int vx, vy;

    int color, size;

    int up, down, right, left,  stop;

    HDC  photo;
    void DeleteDC ();

    void Button   ();
    void Physics  ();
    void Draw     (int t);
    void Run      (int t);

    };

//-----------------------------------------------------------------------------------------------------------------------------------------------------------

void DrawPoint (int *LifeHero);

//-----------------------------------------------------------------------------------------------------------------------------------------------------------


//Отвичает за движение---------------------------------------------------------------------------------------------------------------------------------------------------------------------

void Hero::Physics ()
    {

    x = x + vx;
    y = y + vy;

    //printf ("vx = %i, vy = %i\n", vx, vy);

    if (x < 50)
        {
        x  = 50;
        vx = -vx;
        }

    if (y < 50)
        {
        y  = 50;
        vy = -vy;
        }

    if (x > 950)
        {
        x  = 950;
        vx = -vx;
        }

    if (y > 950)
        {
        y  = 950;
        vy = -vy;
        }

    }


//Клавиши управления-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

void Hero::Button ()
    {

    if (up    != 0 &&GetAsyncKeyState (up))    (vy)--;
    if (down  != 0 &&GetAsyncKeyState (down))  (vy)++;
    if (left  != 0 &&GetAsyncKeyState (left))  (vx)--;
    if (right != 0 &&GetAsyncKeyState (right)) (vx)++;

    if (stop  != 0 && GetAsyncKeyState (stop))  (vx) = (vy) = 0;

    }


//Рисование героя или шарика-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void Hero::Draw (int t)
    {
    if (photo != 0)
        {

        int xphoto = txGetExtentX (photo);
        int yphoto = txGetExtentY (photo);

        txTransparentBlt (txDC(), x, y, xphoto/2, yphoto, photo, t%2*xphoto/2, 0, RGB (0, 0, 0));

        }

    if (photo == 0)
        {
        txSetFillColor (color);
        txCircle       (x,  y, size);
        }

    }


//Отвечает за всего героя------------------------------------------------------------------------------------------------------------------------------------------------------------------

void Hero::Run (int t)
    {
    Draw    (t);
    Physics ();
    Button  ();
    }


//Отвечает за удаление фото после завершения-----------------------------------------------------------------------------------------------------------------------------------------------

void Hero::DeleteDC ()
    {
    txDeleteDC (photo);
    }


//Отвечает за написание жизней героя-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

void DrawPoint (int *LifeHero)
    {
    char point [50] = "";

    sprintf  (point, "Point = %i \r", *LifeHero);

    txTextOut (0, 0, point);
    }



